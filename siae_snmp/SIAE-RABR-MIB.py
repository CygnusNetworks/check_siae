#
# PySNMP MIB module SIAE-RABR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://./sm_rabr.mib
# Produced by pysmi-0.3.2 at Fri Jul 19 08:41:38 2019
# On host 0e190c6811ee platform Linux version 4.9.125-linuxkit by user root
# Using Python version 3.7.3 (default, Apr  3 2019, 05:39:12) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
alarmTrap, AlarmStatus, AlarmSeverityCode = mibBuilder.importSymbols("SIAE-ALARM-MIB", "alarmTrap", "AlarmStatus", "AlarmSeverityCode")
equipIpSnmpAgentAddress, = mibBuilder.importSymbols("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress")
siaeMib, = mibBuilder.importSymbols("SIAE-TREE-MIB", "siaeMib")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, IpAddress, Counter64, NotificationType, TimeTicks, ObjectIdentity, MibIdentifier, Unsigned32, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "IpAddress", "Counter64", "NotificationType", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Unsigned32", "Integer32", "Bits")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
radioBranch = ModuleIdentity((1, 3, 6, 1, 4, 1, 3373, 1103, 39))
radioBranch.setRevisions(('2015-09-15 00:00', '2015-03-23 00:00', '2014-10-07 00:00', '2014-03-04 00:00', '2014-02-04 00:00', '2013-04-16 00:00',))
if mibBuilder.loadTexts: radioBranch.setLastUpdated('201509150000Z')
if mibBuilder.loadTexts: radioBranch.setOrganization('SIAE MICROELETTRONICA spa')
class ModulationMap(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("modBPSK", 0), ("mod4QAM", 1), ("mod8PSK", 2), ("mod16QAM", 3), ("mod32QAM", 4), ("mod64QAM", 5), ("mod128QAM", 6), ("mod256QAM", 7), ("mod512QAM", 8), ("mod1024QAM", 9), ("mod2048QAM", 10))

class ChannelSpacing(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("bw3M5Hz", 0), ("bw7Mhz", 1), ("bw14MHz", 2), ("bw28MHz", 3), ("bw40MHz", 5), ("bw56MHz", 4), ("bw112MHz", 6), ("bw250Mhz", 7), ("bw500Mhz", 8), ("bw750Mhz", 9), ("bw1000Mhz", 10), ("bw10Mhz", 11), ("bw20Mhz", 12), ("bw30Mhz", 13), ("bw50Mhz", 14))

class ConfigMismatchReason(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("securityMismatch", 0), ("frequencyFailMismatch", 1), ("frequencyAlertMismatch", 2), ("ptxMismatch", 3), ("channelSpacingAndModulationMismatch", 4), ("remoteConfigurationMismatch", 5), ("acmMismatch", 6), ("profileSetMismatch", 7))

class LoopCapabilities(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("loopbackAtAnyModulation", 0), ("loopbackAtFixedModulation", 1))

class KeyFeatures(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("featureReserved", 0), ("featureTrafficSquelch", 1), ("featureBaseBandLoop", 2), ("featureMaxPower", 3), ("featureCarrierOnly", 4), ("featureIQLoop", 5), ("featureRFLoopCond", 6), ("featureRFLoopUncond", 7))

radioBranchMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 1), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchMibVersion.setStatus('current')
radioBranchTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2), )
if mibBuilder.loadTexts: radioBranchTable.setStatus('current')
radioBranchRecord = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1), ).setIndexNames((0, "SIAE-RABR-MIB", "radioBranchId"))
if mibBuilder.loadTexts: radioBranchRecord.setStatus('current')
radioBranchId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchId.setStatus('current')
radioBranchTxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchTxFrequency.setStatus('current')
radioBranchTxAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchTxAttenuation.setStatus('current')
radioBranchAtpcManual = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchAtpcManual.setStatus('current')
radioBranchAtpcPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 6), Integer32().clone(-40)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchAtpcPwrHigh.setStatus('current')
radioBranchAtpcPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 7), Integer32().clone(-60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchAtpcPwrLow.setStatus('current')
radioBranchAtpcRange = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchAtpcRange.setStatus('current')
radioBranchKeyFeatures = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 9), KeyFeatures()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchKeyFeatures.setStatus('current')
radioBranchTxShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transmitterShutdown", 1), ("transmitterOn", 2))).clone('transmitterOn')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchTxShutdown.setStatus('current')
radioBranchPrx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchPrx.setStatus('current')
radioBranchPtx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchPtx.setStatus('current')
radioBranchNormalizedMse = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchNormalizedMse.setStatus('current')
radioBranchRFLoopCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 18), LoopCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRFLoopCapabilities.setStatus('current')
radioBranchInvalidFrequencyAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 27), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchInvalidFrequencyAlarm.setStatus('current')
radioBranchBaseBandRxAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 28), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchBaseBandRxAlarm.setStatus('current')
radioBranchModulatorFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 29), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchModulatorFailAlarm.setStatus('current')
radioBranchDemodulatorFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 30), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchDemodulatorFailAlarm.setStatus('current')
radioBranchRxPowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 31), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRxPowerLowAlarm.setStatus('current')
radioBranchTxPowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 32), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchTxPowerLowAlarm.setStatus('current')
radioBranchRemDemodulatorFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 33), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRemDemodulatorFailAlarm.setStatus('current')
radioBranchRtVcoFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 37), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRtVcoFailAlarm.setStatus('current')
radioBranchRxAcgAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 38), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRxAcgAlarm.setStatus('current')
radioBranchRxQualityLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 39), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRxQualityLowAlarm.setStatus('current')
radioBranchRxQualityWarningAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 40), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRxQualityWarningAlarm.setStatus('current')
radioBranchConfigMismatchAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 43), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchConfigMismatchAlarm.setStatus('current')
radioBranchConfigAlarmReason = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 44), ConfigMismatchReason()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchConfigAlarmReason.setStatus('current')
radioBranchLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchLabel.setStatus('current')
radioBranchChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchChannelNum.setStatus('current')
radioBranchTxMinFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchTxMinFrequency.setStatus('current')
radioBranchTxMaxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchTxMaxFrequency.setStatus('current')
radioBranchTxChannelSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchTxChannelSpacing.setStatus('current')
radioBranchCurrentDuplexFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchCurrentDuplexFrequency.setStatus('current')
radioBranchStepFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchStepFrequency.setStatus('current')
radioBranchFractionalPrx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchFractionalPrx.setStatus('current')
radioBranchFractionalPtx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchFractionalPtx.setStatus('current')
radioBranchMinPtxNominalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchMinPtxNominalValue.setStatus('current')
radioBranchMaxPtxNominalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchMaxPtxNominalValue.setStatus('current')
radioBranchExtendedMinPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchExtendedMinPwr.setStatus('current')
radioBranchFreqTableSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 61), ChannelSpacing()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchFreqTableSelection.setStatus('current')
radioBranchMaxChNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchMaxChNum.setStatus('current')
radioBranchDuplexFrequencyChoise1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchDuplexFrequencyChoise1.setStatus('current')
radioBranchDuplexFrequencyChoise2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchDuplexFrequencyChoise2.setStatus('current')
radioBranchDuplexFrequencyChoise3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchDuplexFrequencyChoise3.setStatus('current')
radioBranchDuplexFrequencyChoise4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchDuplexFrequencyChoise4.setStatus('current')
radioBranchDuplexFrequencyChoise5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchDuplexFrequencyChoise5.setStatus('current')
radioBranchDuplexFrequencyChoise6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchDuplexFrequencyChoise6.setStatus('current')
radioBranchDuplexFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 71), Integer32().clone(-2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchDuplexFrequency.setStatus('current')
radioBranchPermanentTxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transmitterOff", 1), ("transmitterOn", 2))).clone('transmitterOn')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchPermanentTxStatus.setStatus('current')
radioBranchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 73), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioBranchRowStatus.setStatus('current')
radioBranchRxActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRxActiveStatus.setStatus('current')
radioBranchTxActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchTxActiveStatus.setStatus('current')
radioBranchCableOpenAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 76), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchCableOpenAlarm.setStatus('current')
radioBranchCableShortAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 2, 1, 77), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchCableShortAlarm.setStatus('current')
radioBranchMaintTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 3), )
if mibBuilder.loadTexts: radioBranchMaintTable.setStatus('current')
radioBranchMaintRecord = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 3, 1), ).setIndexNames((0, "SIAE-RABR-MIB", "radioBranchId"))
if mibBuilder.loadTexts: radioBranchMaintRecord.setStatus('current')
radioBranchTxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transmitterOff", 1), ("transmitterOn", 2))).clone('transmitterOn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchTxStatus.setStatus('current')
radioBranchCarrierOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("carrierOnlyOff", 1), ("carrierOnlyOn", 2))).clone('carrierOnlyOff')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchCarrierOnly.setStatus('current')
radioBranchLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("loopOff", 1), ("rFloopOn-RemTxOff", 2), ("iqloop", 3), ("baseBandloop", 4), ("rfLoopLimited", 6), ("baseBandEthloop", 7), ("rfLoopEthLimited", 8), ("iqEthloop", 9))).clone('loopOff')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchLoop.setStatus('current')
radioBranchRFLoopTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("testNone", 0), ("testRunning", 1), ("testNotPossible", 2), ("testPassed", 3), ("testFail", 4), ("testInterrupted", 5))).clone('testNone')).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRFLoopTestResult.setStatus('current')
radioBranchRFLoopTestPercTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRFLoopTestPercTime.setStatus('current')
radioBranchInvalidFrequencyAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 4), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchInvalidFrequencyAlarmSeverityCode.setStatus('current')
radioBranchBaseBandRxAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 5), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchBaseBandRxAlarmSeverityCode.setStatus('current')
radioBranchModulatorFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 6), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchModulatorFailAlarmSeverityCode.setStatus('current')
radioBranchDemodulatorFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 7), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchDemodulatorFailAlarmSeverityCode.setStatus('current')
radioBranchRxPowerLowAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 8), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchRxPowerLowAlarmSeverityCode.setStatus('current')
radioBranchTxPowerLowAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 9), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchTxPowerLowAlarmSeverityCode.setStatus('current')
radioBranchRtVcoFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 10), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchRtVcoFailAlarmSeverityCode.setStatus('current')
radioBranchRxAcgAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 11), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchRxAcgAlarmSeverityCode.setStatus('current')
radioBranchRxQualityLowAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 12), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchRxQualityLowAlarmSeverityCode.setStatus('current')
radioBranchRxQualityWarningAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 13), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchRxQualityWarningAlarmSeverityCode.setStatus('current')
radioBranchConfigMismatchAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 14), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchConfigMismatchAlarmSeverityCode.setStatus('current')
radioBranchPrxHysteresisValue = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 15), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchPrxHysteresisValue.setStatus('current')
radioBranchPtxHysteresisValue = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 16), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchPtxHysteresisValue.setStatus('current')
radioBranchPrxHysteresisValueTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchPrxHysteresisValueTrapNotification.setStatus('current')
radioBranchPtxHysteresisValueTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchPtxHysteresisValueTrapNotification.setStatus('current')
radioBranchFrequencyTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 19), )
if mibBuilder.loadTexts: radioBranchFrequencyTable.setStatus('current')
radioBranchFreqTabRecord = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 19, 1), ).setIndexNames((0, "SIAE-RABR-MIB", "radioBranchId"), (0, "SIAE-RABR-MIB", "radioBranchFreqTabChId"))
if mibBuilder.loadTexts: radioBranchFreqTabRecord.setStatus('current')
radioBranchFreqTabChId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchFreqTabChId.setStatus('current')
radioBranchFreqTabChNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 19, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchFreqTabChNum.setStatus('current')
radioBranchFreqTabFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 19, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchFreqTabFrequency.setStatus('current')
radioBranchModulationTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 20), )
if mibBuilder.loadTexts: radioBranchModulationTable.setStatus('current')
radioBranchModulationRecord = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 20, 1), ).setIndexNames((0, "SIAE-RABR-MIB", "radioBranchId"), (0, "SIAE-RABR-MIB", "radioBranchChanSpacing"))
if mibBuilder.loadTexts: radioBranchModulationRecord.setStatus('current')
radioBranchChanSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 20, 1, 1), ChannelSpacing()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchChanSpacing.setStatus('current')
radioBranchModulationMap = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 20, 1, 2), ModulationMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchModulationMap.setStatus('current')
radioBranchRefModulationMap = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 20, 1, 3), ModulationMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBranchRefModulationMap.setStatus('current')
radioBranchRemDemodulatorFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 21), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchRemDemodulatorFailAlarmSeverityCode.setStatus('current')
radioBranchRxActiveStatusTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchRxActiveStatusTrapNotification.setStatus('current')
radioBranchTxActiveStatusTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchTxActiveStatusTrapNotification.setStatus('current')
radioBranchCableOpenAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 24), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchCableOpenAlarmSeverityCode.setStatus('current')
radioBranchCableShortAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 39, 25), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBranchCableShortAlarmSeverityCode.setStatus('current')
radioBranchPrxChange = NotificationType((1, 3, 6, 1, 4, 1, 3373, 1103, 0, 3901)).setObjects(("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress"), ("SIAE-RABR-MIB", "radioBranchId"), ("SIAE-RABR-MIB", "radioBranchLabel"), ("SIAE-RABR-MIB", "radioBranchPrx"))
if mibBuilder.loadTexts: radioBranchPrxChange.setStatus('current')
radioBranchPtxChange = NotificationType((1, 3, 6, 1, 4, 1, 3373, 1103, 0, 3902)).setObjects(("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress"), ("SIAE-RABR-MIB", "radioBranchId"), ("SIAE-RABR-MIB", "radioBranchLabel"), ("SIAE-RABR-MIB", "radioBranchPtx"))
if mibBuilder.loadTexts: radioBranchPtxChange.setStatus('current')
mibBuilder.exportSymbols("SIAE-RABR-MIB", radioBranchFreqTableSelection=radioBranchFreqTableSelection, radioBranchPrx=radioBranchPrx, radioBranchMinPtxNominalValue=radioBranchMinPtxNominalValue, radioBranchDuplexFrequencyChoise3=radioBranchDuplexFrequencyChoise3, radioBranchPrxHysteresisValue=radioBranchPrxHysteresisValue, radioBranchDuplexFrequencyChoise1=radioBranchDuplexFrequencyChoise1, radioBranchRxActiveStatusTrapNotification=radioBranchRxActiveStatusTrapNotification, radioBranchStepFrequency=radioBranchStepFrequency, LoopCapabilities=LoopCapabilities, radioBranchTxActiveStatusTrapNotification=radioBranchTxActiveStatusTrapNotification, radioBranchConfigMismatchAlarmSeverityCode=radioBranchConfigMismatchAlarmSeverityCode, radioBranchTxAttenuation=radioBranchTxAttenuation, radioBranchAtpcPwrHigh=radioBranchAtpcPwrHigh, KeyFeatures=KeyFeatures, radioBranchRtVcoFailAlarmSeverityCode=radioBranchRtVcoFailAlarmSeverityCode, ChannelSpacing=ChannelSpacing, radioBranchChannelNum=radioBranchChannelNum, radioBranchMaxPtxNominalValue=radioBranchMaxPtxNominalValue, radioBranchRefModulationMap=radioBranchRefModulationMap, radioBranchMibVersion=radioBranchMibVersion, radioBranchMaintTable=radioBranchMaintTable, radioBranchRxQualityWarningAlarmSeverityCode=radioBranchRxQualityWarningAlarmSeverityCode, radioBranchCarrierOnly=radioBranchCarrierOnly, radioBranchTxShutdown=radioBranchTxShutdown, radioBranchTxActiveStatus=radioBranchTxActiveStatus, radioBranchChanSpacing=radioBranchChanSpacing, radioBranchAtpcPwrLow=radioBranchAtpcPwrLow, radioBranchConfigAlarmReason=radioBranchConfigAlarmReason, radioBranchRtVcoFailAlarm=radioBranchRtVcoFailAlarm, radioBranchFreqTabChId=radioBranchFreqTabChId, radioBranchRecord=radioBranchRecord, radioBranchBaseBandRxAlarmSeverityCode=radioBranchBaseBandRxAlarmSeverityCode, radioBranch=radioBranch, radioBranchRxPowerLowAlarm=radioBranchRxPowerLowAlarm, radioBranchNormalizedMse=radioBranchNormalizedMse, radioBranchFreqTabFrequency=radioBranchFreqTabFrequency, radioBranchCableShortAlarmSeverityCode=radioBranchCableShortAlarmSeverityCode, radioBranchDuplexFrequency=radioBranchDuplexFrequency, radioBranchRxAcgAlarm=radioBranchRxAcgAlarm, radioBranchTxPowerLowAlarmSeverityCode=radioBranchTxPowerLowAlarmSeverityCode, radioBranchFractionalPrx=radioBranchFractionalPrx, radioBranchBaseBandRxAlarm=radioBranchBaseBandRxAlarm, radioBranchTxFrequency=radioBranchTxFrequency, radioBranchTable=radioBranchTable, PYSNMP_MODULE_ID=radioBranch, radioBranchCableOpenAlarm=radioBranchCableOpenAlarm, radioBranchFractionalPtx=radioBranchFractionalPtx, radioBranchPrxChange=radioBranchPrxChange, ConfigMismatchReason=ConfigMismatchReason, radioBranchFreqTabRecord=radioBranchFreqTabRecord, radioBranchCableShortAlarm=radioBranchCableShortAlarm, ModulationMap=ModulationMap, radioBranchCableOpenAlarmSeverityCode=radioBranchCableOpenAlarmSeverityCode, radioBranchModulationRecord=radioBranchModulationRecord, radioBranchTxPowerLowAlarm=radioBranchTxPowerLowAlarm, radioBranchId=radioBranchId, radioBranchRxQualityWarningAlarm=radioBranchRxQualityWarningAlarm, radioBranchRxQualityLowAlarm=radioBranchRxQualityLowAlarm, radioBranchTxMaxFrequency=radioBranchTxMaxFrequency, radioBranchPtx=radioBranchPtx, radioBranchRxAcgAlarmSeverityCode=radioBranchRxAcgAlarmSeverityCode, radioBranchModulationMap=radioBranchModulationMap, radioBranchConfigMismatchAlarm=radioBranchConfigMismatchAlarm, radioBranchPtxChange=radioBranchPtxChange, radioBranchDuplexFrequencyChoise6=radioBranchDuplexFrequencyChoise6, radioBranchDemodulatorFailAlarm=radioBranchDemodulatorFailAlarm, radioBranchRxActiveStatus=radioBranchRxActiveStatus, radioBranchDuplexFrequencyChoise2=radioBranchDuplexFrequencyChoise2, radioBranchInvalidFrequencyAlarmSeverityCode=radioBranchInvalidFrequencyAlarmSeverityCode, radioBranchRxPowerLowAlarmSeverityCode=radioBranchRxPowerLowAlarmSeverityCode, radioBranchCurrentDuplexFrequency=radioBranchCurrentDuplexFrequency, radioBranchModulatorFailAlarmSeverityCode=radioBranchModulatorFailAlarmSeverityCode, radioBranchPtxHysteresisValueTrapNotification=radioBranchPtxHysteresisValueTrapNotification, radioBranchLoop=radioBranchLoop, radioBranchModulationTable=radioBranchModulationTable, radioBranchDuplexFrequencyChoise5=radioBranchDuplexFrequencyChoise5, radioBranchLabel=radioBranchLabel, radioBranchFrequencyTable=radioBranchFrequencyTable, radioBranchMaintRecord=radioBranchMaintRecord, radioBranchRFLoopTestPercTime=radioBranchRFLoopTestPercTime, radioBranchPermanentTxStatus=radioBranchPermanentTxStatus, radioBranchFreqTabChNum=radioBranchFreqTabChNum, radioBranchTxStatus=radioBranchTxStatus, radioBranchPtxHysteresisValue=radioBranchPtxHysteresisValue, radioBranchTxMinFrequency=radioBranchTxMinFrequency, radioBranchInvalidFrequencyAlarm=radioBranchInvalidFrequencyAlarm, radioBranchMaxChNum=radioBranchMaxChNum, radioBranchRFLoopTestResult=radioBranchRFLoopTestResult, radioBranchTxChannelSpacing=radioBranchTxChannelSpacing, radioBranchAtpcManual=radioBranchAtpcManual, radioBranchAtpcRange=radioBranchAtpcRange, radioBranchRemDemodulatorFailAlarm=radioBranchRemDemodulatorFailAlarm, radioBranchRFLoopCapabilities=radioBranchRFLoopCapabilities, radioBranchPrxHysteresisValueTrapNotification=radioBranchPrxHysteresisValueTrapNotification, radioBranchKeyFeatures=radioBranchKeyFeatures, radioBranchDuplexFrequencyChoise4=radioBranchDuplexFrequencyChoise4, radioBranchRxQualityLowAlarmSeverityCode=radioBranchRxQualityLowAlarmSeverityCode, radioBranchModulatorFailAlarm=radioBranchModulatorFailAlarm, radioBranchRemDemodulatorFailAlarmSeverityCode=radioBranchRemDemodulatorFailAlarmSeverityCode, radioBranchRowStatus=radioBranchRowStatus, radioBranchDemodulatorFailAlarmSeverityCode=radioBranchDemodulatorFailAlarmSeverityCode, radioBranchExtendedMinPwr=radioBranchExtendedMinPwr)
