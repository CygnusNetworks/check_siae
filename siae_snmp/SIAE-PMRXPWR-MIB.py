# PySNMP SMI module. Autogenerated from smidump -f python SIAE-PMRXPWR-MIB
# by libsmi2pysnmp-0.1.3 at Wed Apr  3 15:44:53 2019,
# Python version sys.version_info(major=2, minor=7, micro=15, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( AlarmSeverityCode, AlarmStatus, ) = mibBuilder.importSymbols("SIAE-ALARM-MIB", "AlarmSeverityCode", "AlarmStatus")
( siaeMib, ) = mibBuilder.importSymbols("SIAE-TREE-MIB", "siaeMib")
( Bits, Counter32, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, RowStatus, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus")

# Objects

pmRxPwr = ModuleIdentity((1, 3, 6, 1, 4, 1, 3373, 1103, 12)).setRevisions(("2014-10-07 00:00","2014-05-13 00:00","2014-02-03 00:00","2013-04-16 00:00",))
if mibBuilder.loadTexts: pmRxPwr.setOrganization("SIAE MICROELETTRONICA spa")
if mibBuilder.loadTexts: pmRxPwr.setContactInfo("SIAE MICROELETTONICA s.p.a.\nVia Michelangelo Buonarroti, 21\n20093 - Cologno Monzese\nMilano - ITALY\nPhone :  +39-02-27325-1\nE-mail: tbd@siaemic.com")
if mibBuilder.loadTexts: pmRxPwr.setDescription("Performance Monitoring on Received (RX) RF Power.")
pmRxPwrMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 1), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrMibVersion.setDescription("Numerical version of this module.\nThe string version of this MIB have the following format:\n   XX.YY.ZZ\nso, for example, the value 1 should be interpreted as 00.00.01\nand the value 10001 should be interpreted as 01.00.01.")
pmRxPwrCounterTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2))
if mibBuilder.loadTexts: pmRxPwrCounterTable.setDescription("Table with PmRxPwr records: one record for 1+0 configuration and two\nrecord for 1+1 configuration.")
pmRxPwrCounterRecord = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1)).setIndexNames((0, "SIAE-PMRXPWR-MIB", "pmRxPwrBranchId"), (0, "SIAE-PMRXPWR-MIB", "pmRxPwrCounterBlockId"))
if mibBuilder.loadTexts: pmRxPwrCounterRecord.setDescription("PmRxPwrCounter record.")
pmRxPwrBranchId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrBranchId.setDescription("This object identifies the Radio Branch")
pmRxPwrCounterBlockId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrCounterBlockId.setDescription("This object identifies  the counters block and the counter type\naccording to the following code:\n1  Current Daily counters\n2  Daily counters (Day before counters)\n3  Current 15 minutes counters\n4  15 minutes counters N. 1 (The most recent 15 minutes counters)\n   ..............................................\nn  15 minutes counters N. n\n20 15 minutes counters N.16(The oldest 15 min. counters 4 hours before).")
pmRxPwrCounterBlockType = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(2,1,)).subtype(namedValues=NamedValues(("daily", 1), ("fifteenMin", 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrCounterBlockType.setDescription("The type of the counter block.")
pmRxPwrCounterBlockStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 4), Integer().subtype(subtypeSpec=SingleValueConstraint(4,2,5,6,1,3,)).subtype(namedValues=NamedValues(("meaningless", 1), ("meaningfull", 2), ("incomplete", 3), ("dummy", 4), ("lost", 5), ("restarted", 6), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrCounterBlockStatus.setDescription("Status of the block counter.")
pmRxPwrCounterTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrCounterTimeStamp.setDescription("The object is the time when the performance record is closed reported\nas the second number since 1-Gen-1970.")
pmRxPwrRlts1Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrRlts1Counter.setDescription("Number of seconds when the Received power is less than the threshold 1.")
pmRxPwrRlts2Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrRlts2Counter.setDescription("Number of seconds when the Received power is less than the threshold 2")
pmRxPwrRlts3Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrRlts3Counter.setDescription("Number of seconds when the Received power is less than the threshold 3")
pmRxPwrRlts4Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrRlts4Counter.setDescription("Number of seconds when the Received power is less than the threshold 4")
pmRxPwrRlts5Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrRlts5Counter.setDescription("Number of seconds when the Received power is less than the threshold 5")
pmRxPwrTMMax = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTMMax.setDescription("Maximum Power Received Level Tide Mark.")
pmRxPwrTMMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTMMin.setDescription("Minimum Power Received Level Tide Mark.")
pmRxPwrAverageRxLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrAverageRxLevel.setDescription(" Power Received Level  (Average value)")
pmRxPwrTpClassTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3))
if mibBuilder.loadTexts: pmRxPwrTpClassTable.setDescription("Table with PmRxPwrTpClass records: one record for 1+0 configuration\nand two record for 1+1 configuration.")
pmRxPwrTpClassRecord = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1)).setIndexNames((0, "SIAE-PMRXPWR-MIB", "pmRxPwrTpClassBranchId"))
if mibBuilder.loadTexts: pmRxPwrTpClassRecord.setDescription("PmRxPwrTpClass record.")
pmRxPwrTpClassBranchId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClassBranchId.setDescription("This object identifies the Radio Branch")
pmRxPwrTpClassStartStop = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(1,2,)).subtype(namedValues=NamedValues(("start", 1), ("stop", 2), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClassStartStop.setDescription("This object is used to start and to stop the Perfomance Monitoring\ncounter evaluation.")
pmRxPwrTpClassLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClassLabel.setDescription("ASCII string used to identify the Tp class:\npmRxPwrTpClassBranchId = 1 label = Radio 1\npmRxPwrTpClassBranchId = 2 label = Radio 2.")
pmRxPwrTpClassTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClassTimeStamp.setDescription("The object is the time when the performance record is closed reported\nas the second number since 1/1/70.")
pmRxPwrTpClass15MRlts1Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 5), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts1Alarm.setDescription("15 minutes Rlts1 threshold cross alarm with associated severity.")
pmRxPwrTpClass15MRlts2Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 6), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts2Alarm.setDescription("15 minutes Rlts2 threshold cross alarm with associated severity.")
pmRxPwrTpClass15MRlts3Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 7), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts3Alarm.setDescription("15 minutes Rlts3 threshold cross alarm with associated severity.")
pmRxPwrTpClass15MRlts4Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 8), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts4Alarm.setDescription("15 minutes Rlts4 threshold cross alarm with associated severity.")
pmRxPwrTpClass15MRlts5Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 9), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts5Alarm.setDescription("15 minutes Rlts5 threshold cross alarm with associated severity.")
pmRxPwrTpClass24HRlts1Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 10), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts1Alarm.setDescription("Daily Rlts1 threshold cross alarm with associated severity.")
pmRxPwrTpClass24HRlts2Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 11), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts2Alarm.setDescription("Daily Rlts2 threshold cross alarm with associated severity.")
pmRxPwrTpClass24HRlts3Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 12), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts3Alarm.setDescription("Daily Rlts3 threshold cross alarm with associated severity.")
pmRxPwrTpClass24HRlts4Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 13), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts4Alarm.setDescription("Daily Rlts4 threshold cross alarm with associated severity.")
pmRxPwrTpClass24HRlts5Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 14), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts5Alarm.setDescription("Daily Rlts5 threshold cross alarm with associated severity.")
pmRxPwrTpClassRlt1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, -20)).clone(-40)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClassRlt1Threshold.setDescription("Received Power Level Threshold 1 (dBm value); range -100 to -20")
pmRxPwrTpClassRlt2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, -20)).clone(-50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClassRlt2Threshold.setDescription("Received Power Level Threshold 2 (dBm value); range -100 to -20")
pmRxPwrTpClassRlt3Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, -20)).clone(-60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClassRlt3Threshold.setDescription("Received Power Level Threshold 3 (dBm value); range -100 to -20")
pmRxPwrTpClassRlt4Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, -20)).clone(-70)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClassRlt4Threshold.setDescription("Received Power Level Threshold 4 (dBm value); range -100 to -20")
pmRxPwrTpClassRlt5Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, -20)).clone(-80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClassRlt5Threshold.setDescription("Received Power Level Threshold 5 (dBm value); range -100 to -20")
pmRxPwrTpClass15MRlts1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 20), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts1Threshold.setDescription("Number of seconds within 15 minutes to set\npmRxPwrTpClass15MRlts1Alarm (zero value disables the alarm).")
pmRxPwrTpClass15MRlts2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 21), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts2Threshold.setDescription("Number of seconds within 15 minutes to set\npmRxPwrTpClass15MRlts2Alarm (zero value disables the alarm).")
pmRxPwrTpClass15MRlts3Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 22), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts3Threshold.setDescription("Number of seconds within 15 minutes to set\npmRxPwrTpClass15MRlts3Alarm (zero value disables the alarm).")
pmRxPwrTpClass15MRlts4Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 23), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts4Threshold.setDescription("Number of seconds within 15 minutes to set\npmRxPwrTpClass15MRlts4Alarm (zero value disables the alarm).")
pmRxPwrTpClass15MRlts5Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 24), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRlts5Threshold.setDescription("Number of seconds within 15 minutes to set\npmRxPwrTpClass15MRlts5Alarm (zero value disables the alarm).")
pmRxPwrTpClass24HRlts1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 25), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts1Threshold.setDescription("Number of seconds within a day to set pmRxPwrTpClass24HRlts1Alarm\n(zero value disables the alarm).")
pmRxPwrTpClass24HRlts2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 26), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts2Threshold.setDescription("Number of seconds within a day to set pmRxPwrTpClass24HRlts2Alarm\n(zero value disables the alarm).")
pmRxPwrTpClass24HRlts3Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 27), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts3Threshold.setDescription("Number of seconds within a day to set pmRxPwrTpClass24HRlts3Alarm\n(zero value disables the alarm).")
pmRxPwrTpClass24HRlts4Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 28), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts4Threshold.setDescription("Number of seconds within a day to set pmRxPwrTpClass24HRlts4Alarm\n(zero value disables the alarm).")
pmRxPwrTpClass24HRlts5Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 29), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRlts5Threshold.setDescription("Number of seconds within a day to set pmRxPwrTpClass24HRlts5Alarm\n(zero value disables the alarm).")
pmRxPwrTpClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 3, 1, 30), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pmRxPwrTpClassRowStatus.setDescription("Status of this row of pmRxPwrTpClass.")
pmRxPwrTpMaintTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 4))
if mibBuilder.loadTexts: pmRxPwrTpMaintTable.setDescription("Table with Command for maintenance of Termination Point.\nObjects in this table is not persistent. An Instance of this \ntable is created on creation of pmRxPwrTpClassTable")
pmRxPwrTpMaintRecord = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 4, 1)).setIndexNames((0, "SIAE-PMRXPWR-MIB", "pmRxPwrTpClassBranchId"))
if mibBuilder.loadTexts: pmRxPwrTpMaintRecord.setDescription("PmG828 Termination Point Maintenance record.")
pmRxPwrTpMaintCounterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 4, 1, 1), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("notActive", 0), ("clear", 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmRxPwrTpMaintCounterClear.setDescription("This object is used to clear the Perfomance Monitoring counters.")
pmRxPwrTpMaintAlarmClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 4, 1, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("notActive", 0), ("clear", 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmRxPwrTpMaintAlarmClear.setDescription("This object is used to clear the Perfomance Monitoring threshold cross alarms.")
pmRxPwrTpClass15MRltsAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 5), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmRxPwrTpClass15MRltsAlarmSeverityCode.setDescription("Define the severity associated to the pmRxPwrTpClass15MRltsAlarm and\nenables/disables the trap generation on status change event.")
pmRxPwrTpClass24HRltsAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 12, 6), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmRxPwrTpClass24HRltsAlarmSeverityCode.setDescription("Define the severity associated to the pmRxPwrTpClass24HRltsAlarm and\nenables/disables the trap generation on status change event.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("SIAE-PMRXPWR-MIB", PYSNMP_MODULE_ID=pmRxPwr)

# Objects
mibBuilder.exportSymbols("SIAE-PMRXPWR-MIB", pmRxPwr=pmRxPwr, pmRxPwrMibVersion=pmRxPwrMibVersion, pmRxPwrCounterTable=pmRxPwrCounterTable, pmRxPwrCounterRecord=pmRxPwrCounterRecord, pmRxPwrBranchId=pmRxPwrBranchId, pmRxPwrCounterBlockId=pmRxPwrCounterBlockId, pmRxPwrCounterBlockType=pmRxPwrCounterBlockType, pmRxPwrCounterBlockStatus=pmRxPwrCounterBlockStatus, pmRxPwrCounterTimeStamp=pmRxPwrCounterTimeStamp, pmRxPwrRlts1Counter=pmRxPwrRlts1Counter, pmRxPwrRlts2Counter=pmRxPwrRlts2Counter, pmRxPwrRlts3Counter=pmRxPwrRlts3Counter, pmRxPwrRlts4Counter=pmRxPwrRlts4Counter, pmRxPwrRlts5Counter=pmRxPwrRlts5Counter, pmRxPwrTMMax=pmRxPwrTMMax, pmRxPwrTMMin=pmRxPwrTMMin, pmRxPwrAverageRxLevel=pmRxPwrAverageRxLevel, pmRxPwrTpClassTable=pmRxPwrTpClassTable, pmRxPwrTpClassRecord=pmRxPwrTpClassRecord, pmRxPwrTpClassBranchId=pmRxPwrTpClassBranchId, pmRxPwrTpClassStartStop=pmRxPwrTpClassStartStop, pmRxPwrTpClassLabel=pmRxPwrTpClassLabel, pmRxPwrTpClassTimeStamp=pmRxPwrTpClassTimeStamp, pmRxPwrTpClass15MRlts1Alarm=pmRxPwrTpClass15MRlts1Alarm, pmRxPwrTpClass15MRlts2Alarm=pmRxPwrTpClass15MRlts2Alarm, pmRxPwrTpClass15MRlts3Alarm=pmRxPwrTpClass15MRlts3Alarm, pmRxPwrTpClass15MRlts4Alarm=pmRxPwrTpClass15MRlts4Alarm, pmRxPwrTpClass15MRlts5Alarm=pmRxPwrTpClass15MRlts5Alarm, pmRxPwrTpClass24HRlts1Alarm=pmRxPwrTpClass24HRlts1Alarm, pmRxPwrTpClass24HRlts2Alarm=pmRxPwrTpClass24HRlts2Alarm, pmRxPwrTpClass24HRlts3Alarm=pmRxPwrTpClass24HRlts3Alarm, pmRxPwrTpClass24HRlts4Alarm=pmRxPwrTpClass24HRlts4Alarm, pmRxPwrTpClass24HRlts5Alarm=pmRxPwrTpClass24HRlts5Alarm, pmRxPwrTpClassRlt1Threshold=pmRxPwrTpClassRlt1Threshold, pmRxPwrTpClassRlt2Threshold=pmRxPwrTpClassRlt2Threshold, pmRxPwrTpClassRlt3Threshold=pmRxPwrTpClassRlt3Threshold, pmRxPwrTpClassRlt4Threshold=pmRxPwrTpClassRlt4Threshold, pmRxPwrTpClassRlt5Threshold=pmRxPwrTpClassRlt5Threshold, pmRxPwrTpClass15MRlts1Threshold=pmRxPwrTpClass15MRlts1Threshold, pmRxPwrTpClass15MRlts2Threshold=pmRxPwrTpClass15MRlts2Threshold, pmRxPwrTpClass15MRlts3Threshold=pmRxPwrTpClass15MRlts3Threshold, pmRxPwrTpClass15MRlts4Threshold=pmRxPwrTpClass15MRlts4Threshold, pmRxPwrTpClass15MRlts5Threshold=pmRxPwrTpClass15MRlts5Threshold, pmRxPwrTpClass24HRlts1Threshold=pmRxPwrTpClass24HRlts1Threshold, pmRxPwrTpClass24HRlts2Threshold=pmRxPwrTpClass24HRlts2Threshold, pmRxPwrTpClass24HRlts3Threshold=pmRxPwrTpClass24HRlts3Threshold, pmRxPwrTpClass24HRlts4Threshold=pmRxPwrTpClass24HRlts4Threshold, pmRxPwrTpClass24HRlts5Threshold=pmRxPwrTpClass24HRlts5Threshold, pmRxPwrTpClassRowStatus=pmRxPwrTpClassRowStatus, pmRxPwrTpMaintTable=pmRxPwrTpMaintTable, pmRxPwrTpMaintRecord=pmRxPwrTpMaintRecord, pmRxPwrTpMaintCounterClear=pmRxPwrTpMaintCounterClear, pmRxPwrTpMaintAlarmClear=pmRxPwrTpMaintAlarmClear, pmRxPwrTpClass15MRltsAlarmSeverityCode=pmRxPwrTpClass15MRltsAlarmSeverityCode, pmRxPwrTpClass24HRltsAlarmSeverityCode=pmRxPwrTpClass24HRltsAlarmSeverityCode)

